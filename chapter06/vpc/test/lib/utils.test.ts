/**
 * This code is generated by GitHub Copilot.
 */

import { cidrSubnet } from '../../lib/utils';

describe('cidrSubnet', () => {
  it('should calculate the correct subnet CIDR for given base CIDR, subnet bits, and index', () => {
    // Arrange
    const baseCidr = '192.168.0.0/24';
    const subnetBits = 2;
    const index = 1;

    // Act
    const result = cidrSubnet(baseCidr, subnetBits, index);

    // Assert
    expect(result).toBe('192.168.0.64/26');
  });

  it('should calculate the first subnet when index is 0', () => {
    // Arrange
    const baseCidr = '10.0.0.0/16';
    const subnetBits = 4;
    const index = 0;

    // Act
    const result = cidrSubnet(baseCidr, subnetBits, index);

    // Assert
    expect(result).toBe('10.0.0.0/20');
  });

  it('should calculate the correct subnet for a larger index', () => {
    // Arrange
    const baseCidr = '172.16.0.0/20';
    const subnetBits = 3;
    const index = 5;

    // Act
    const result = cidrSubnet(baseCidr, subnetBits, index);

    // Assert
    expect(result).toBe('172.16.10.0/23');
  });
});